--
-- PostgreSQL database dump
--

-- Dumped from database version 13.2
-- Dumped by pg_dump version 13.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auctionation; Type: DATABASE; Schema: -; Owner: auctionation
--

CREATE DATABASE auctionation WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'Portuguese_Portugal.1252';


ALTER DATABASE auctionation OWNER TO auctionation;

\connect auctionation

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: banuser(integer, integer, character varying); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.banuser(adminuserid integer, banneduserid integer, auctionmsg character varying)
    LANGUAGE plpgsql
    AS $$
DECLARE
    bannedUserHostedAuctions CURSOR FOR -- Cursor for the auctions hosted by the banned user.
        SELECT a.auctionId
        FROM Auction a
        WHERE a.hostUserId = bannedUserId;
    bannedUserEnrolledAuctions CURSOR FOR -- Cursor for the auctions in which the banned user is / was enrolled in.
        SELECT DISTINCT b.auctionId
        FROM Bid b
        WHERE b.userId = bannedUserId;
    maxUserBid Bid.amount%TYPE; -- Will hold the max bid done by the banned user in the current Auction.
    maxAuctionBid Auction.currentBidValue%TYPE; -- Will hold the max bix performed in the current Auction.
BEGIN
    UPDATE "user" -- mark the specified user as banned.
    SET banTimestamp = CURRENT_TIMESTAMP
    WHERE userId = bannedUserId;

    FOR currAuction IN bannedUserHostedAuctions
    LOOP
        UPDATE Auction
        SET endTimestamp = CURRENT_TIMESTAMP, -- Cancel the current auction hosted by the banned user.
            currentState = 2
        WHERE auctionId = currAuction.auctionid;

        INSERT INTO Comment (text, createTimestamp, updateTimestamp, userId, auctionId)
        -- Warn all the enrolled users in the comments section that the auction has been cancelled.
        VALUES (auctionMsg,
                CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, adminUserId, currAuction.auctionId);
    END LOOP;

    FOR currAuction IN bannedUserEnrolledAuctions
    LOOP
        SELECT a.currentBidValue -- Get the highest bid of the auction
        INTO maxAuctionBid
        FROM Auction a
        WHERE a.auctionId = currAuction.auctionId;

        UPDATE Bid
        SET invalidationTimestamp = CURRENT_TIMESTAMP
        -- Invalidate all the bids performed by the user and those which are smaller than the highest one of the Auction
        WHERE auctionId = currAuction.auctionId AND
              (userId = bannedUserId OR
               amount < maxAuctionBid);

        SELECT MAX(b.amount) -- Get the max bid done by the user done in the current auction.
        INTO maxUserBid
        FROM Bid b
        WHERE b.auctionId = currAuction.auctionId AND
              b.userId = bannedUserId;

        UPDATE Auction -- The highest bid in the current auction is now the highest bid performed by banned user.
        SET currentBidValue = maxUserBid
        WHERE auctionId = currAuction.auctionId;
    END LOOP;

    COMMIT;
END
$$;


ALTER PROCEDURE public.banuser(adminuserid integer, banneduserid integer, auctionmsg character varying) OWNER TO postgres;

--
-- Name: notifyusercomment(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.notifyusercomment() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    userName VARCHAR(128);
    auctionName VARCHAR(128);
    usersToNotify CURSOR FOR
        SELECT DISTINCT b.userId
        FROM Bid b
        WHERE b.auctionId = NEW.auctionId AND b.userId != NEW.userId;
BEGIN
    SELECT u.userName INTO userName
    FROM "user" u
    WHERE u.userId = NEW.userId;

    SELECT a.auctionName INTO auctionName
    FROM auction a
             JOIN comment ON NEW.auctionId = a.auctionId;

    FOR userToNotify IN usersToNotify
        LOOP
            INSERT INTO notification
            (notificationTitle, description, createTimestamp, updatetimestamp, userId)
            VALUES (FORMAT('New comment in auction %s', auctionName),
                    FORMAT('User [%s] has commented in auction %s', userName, auctionName),
                    CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, userToNotify.userId);

            INSERT INTO commentnotification
            VALUES (NEW.auctionId, CURRVAL(PG_GET_SERIAL_SEQUENCE('notification', 'notificationid')));
        END LOOP;

    RETURN NEW;
END
$$;


ALTER FUNCTION public.notifyusercomment() OWNER TO postgres;

--
-- Name: updateauctionedithistory(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.updateauctionedithistory() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    latestAuctionVersion INTEGER;
BEGIN

    SELECT COALESCE(MAX(adh.version), 0)
    INTO latestAuctionVersion
    FROM AuctionEditHistory adh
    JOIN Auction ON OLD.auctionId = adh.auctionId;

    INSERT INTO AuctionEditHistory
    (auctionId, auctionname, description, itemName, itemDescription, itemOrigin, version, editTimestamp)
    VALUES
    (OLD.auctionId, OLD.auctionName, OLD.description, OLD.itemName, OLD.itemDescription,
     OLD.itemOrigin, latestAuctionVersion + 1, CURRENT_TIMESTAMP);

    RETURN NEW;
END
$$;


ALTER FUNCTION public.updateauctionedithistory() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auction; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auction (
    auctionid integer NOT NULL,
    auctionname character varying(128) NOT NULL,
    description character varying(1024),
    currentbidvalue double precision DEFAULT 0 NOT NULL,
    initialvalue double precision NOT NULL,
    currentstate integer DEFAULT 0 NOT NULL,
    itemean character varying(13) NOT NULL,
    itemname character varying(128) NOT NULL,
    itemdescription character varying(1024),
    itemorigin character varying(128) NOT NULL,
    starttimestamp timestamp without time zone NOT NULL,
    expirationtimestamp timestamp without time zone NOT NULL,
    endtimestamp timestamp without time zone,
    createtimestamp timestamp without time zone NOT NULL,
    updatetimestamp timestamp without time zone NOT NULL,
    deletetimestamp timestamp without time zone,
    hostuserid bigint NOT NULL
);


ALTER TABLE public.auction OWNER TO postgres;

--
-- Name: Auction_auctionid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."Auction_auctionid_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."Auction_auctionid_seq" OWNER TO postgres;

--
-- Name: Auction_auctionid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."Auction_auctionid_seq" OWNED BY public.auction.auctionid;


--
-- Name: category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.category (
    categoryid integer NOT NULL,
    categoryname character varying(128) NOT NULL,
    description character varying(1024)
);


ALTER TABLE public.category OWNER TO postgres;

--
-- Name: Category_categoryid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."Category_categoryid_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."Category_categoryid_seq" OWNER TO postgres;

--
-- Name: Category_categoryid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."Category_categoryid_seq" OWNED BY public.category.categoryid;


--
-- Name: user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."user" (
    userid integer NOT NULL,
    username character varying(128) NOT NULL,
    firstname character varying(64) NOT NULL,
    lastname character varying(64),
    email character varying(128) NOT NULL,
    phonenumber character varying(32) NOT NULL,
    address character varying(256) NOT NULL,
    birthdate date NOT NULL,
    passwordhash character varying(512) NOT NULL,
    bantimestamp timestamp without time zone,
    createtimestamp timestamp without time zone NOT NULL,
    updatetimestamp timestamp without time zone NOT NULL,
    deletetimestamp timestamp without time zone,
    roleid bigint NOT NULL
);


ALTER TABLE public."user" OWNER TO postgres;

--
-- Name: User_userid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."User_userid_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."User_userid_seq" OWNER TO postgres;

--
-- Name: User_userid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."User_userid_seq" OWNED BY public."user".userid;


--
-- Name: auctioncategory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auctioncategory (
    auctionid bigint NOT NULL,
    categoryid bigint NOT NULL
);


ALTER TABLE public.auctioncategory OWNER TO postgres;

--
-- Name: auctionedithistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auctionedithistory (
    auctionedithistoryid integer NOT NULL,
    version smallint DEFAULT 0,
    auctionname character varying(128) NOT NULL,
    description character varying(1024),
    edittimestamp timestamp without time zone NOT NULL,
    itemname character varying(128) NOT NULL,
    itemdescription character varying(1024),
    itemorigin character varying(128) NOT NULL,
    auctionid bigint
);


ALTER TABLE public.auctionedithistory OWNER TO postgres;

--
-- Name: auctionedithistory_auctionedithistoryid_seq1; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.auctionedithistory_auctionedithistoryid_seq1
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auctionedithistory_auctionedithistoryid_seq1 OWNER TO postgres;

--
-- Name: auctionedithistory_auctionedithistoryid_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.auctionedithistory_auctionedithistoryid_seq1 OWNED BY public.auctionedithistory.auctionedithistoryid;


--
-- Name: auctionnotification; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auctionnotification (
    auctionid bigint NOT NULL,
    notificationid bigint NOT NULL
);


ALTER TABLE public.auctionnotification OWNER TO postgres;

--
-- Name: bid; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bid (
    bidid integer NOT NULL,
    description character varying(1024),
    amount double precision NOT NULL,
    createtimestamp timestamp without time zone NOT NULL,
    auctionid bigint NOT NULL,
    userid bigint NOT NULL,
    invalidationtimestamp timestamp without time zone
);


ALTER TABLE public.bid OWNER TO postgres;

--
-- Name: bid_bidid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.bid_bidid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bid_bidid_seq OWNER TO postgres;

--
-- Name: bid_bidid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.bid_bidid_seq OWNED BY public.bid.bidid;


--
-- Name: comment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comment (
    commentid integer NOT NULL,
    text character varying(1024) NOT NULL,
    createtimestamp timestamp without time zone NOT NULL,
    updatetimestamp timestamp without time zone NOT NULL,
    deletetimestamp timestamp without time zone,
    userid bigint NOT NULL,
    auctionid bigint NOT NULL
);


ALTER TABLE public.comment OWNER TO postgres;

--
-- Name: comment_commentid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.comment_commentid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.comment_commentid_seq OWNER TO postgres;

--
-- Name: comment_commentid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.comment_commentid_seq OWNED BY public.comment.commentid;


--
-- Name: commentnotification; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.commentnotification (
    auctionid bigint NOT NULL,
    notificationid bigint NOT NULL
);


ALTER TABLE public.commentnotification OWNER TO postgres;

--
-- Name: exception; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.exception (
    exceptionid integer NOT NULL,
    errorcode integer NOT NULL,
    errorstate character varying(16) NOT NULL,
    description character varying(1024),
    errortimestamp timestamp without time zone NOT NULL
);


ALTER TABLE public.exception OWNER TO postgres;

--
-- Name: exception_exceptionid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.exception_exceptionid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.exception_exceptionid_seq OWNER TO postgres;

--
-- Name: exception_exceptionid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.exception_exceptionid_seq OWNED BY public.exception.exceptionid;


--
-- Name: notification; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notification (
    notificationid integer NOT NULL,
    notificationtitle character varying(128) NOT NULL,
    description character varying(1024),
    seentimestamp timestamp without time zone,
    createtimestamp timestamp without time zone NOT NULL,
    deletetimestamp timestamp without time zone,
    userid bigint NOT NULL,
    updatetimestamp timestamp without time zone NOT NULL
);


ALTER TABLE public.notification OWNER TO postgres;

--
-- Name: notification_notificationid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.notification_notificationid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.notification_notificationid_seq OWNER TO postgres;

--
-- Name: notification_notificationid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.notification_notificationid_seq OWNED BY public.notification.notificationid;


--
-- Name: role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.role (
    roleid integer NOT NULL,
    rolename character varying(128) NOT NULL,
    description character varying(1024)
);


ALTER TABLE public.role OWNER TO postgres;

--
-- Name: role_roleid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.role_roleid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.role_roleid_seq OWNER TO postgres;

--
-- Name: role_roleid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.role_roleid_seq OWNED BY public.role.roleid;


--
-- Name: auction auctionid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auction ALTER COLUMN auctionid SET DEFAULT nextval('public."Auction_auctionid_seq"'::regclass);


--
-- Name: auctionedithistory auctionedithistoryid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auctionedithistory ALTER COLUMN auctionedithistoryid SET DEFAULT nextval('public.auctionedithistory_auctionedithistoryid_seq1'::regclass);


--
-- Name: bid bidid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bid ALTER COLUMN bidid SET DEFAULT nextval('public.bid_bidid_seq'::regclass);


--
-- Name: category categoryid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.category ALTER COLUMN categoryid SET DEFAULT nextval('public."Category_categoryid_seq"'::regclass);


--
-- Name: comment commentid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment ALTER COLUMN commentid SET DEFAULT nextval('public.comment_commentid_seq'::regclass);


--
-- Name: exception exceptionid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.exception ALTER COLUMN exceptionid SET DEFAULT nextval('public.exception_exceptionid_seq'::regclass);


--
-- Name: notification notificationid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification ALTER COLUMN notificationid SET DEFAULT nextval('public.notification_notificationid_seq'::regclass);


--
-- Name: role roleid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role ALTER COLUMN roleid SET DEFAULT nextval('public.role_roleid_seq'::regclass);


--
-- Name: user userid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user" ALTER COLUMN userid SET DEFAULT nextval('public."User_userid_seq"'::regclass);


--
-- Data for Name: auction; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auction (auctionid, auctionname, description, currentbidvalue, initialvalue, currentstate, itemean, itemname, itemdescription, itemorigin, starttimestamp, expirationtimestamp, endtimestamp, createtimestamp, updatetimestamp, deletetimestamp, hostuserid) FROM stdin;
1	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	10	0	2	1234567890000	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	2021-05-28 00:00:00	2021-05-28 00:00:00	2021-05-30 19:58:53.284476	2021-05-28 00:00:00	2021-05-28 00:00:00	\N	1
3	Charity Auction - SpaceX	An auction made in order to raise funds for the poor people living in NY.	0	3000000	2	2	Tesla X2 - 2021	Latest Tesla car announced!	USA	1970-01-19 19:38:54.538	1970-07-07 19:29:25.034	2021-05-30 19:58:53.284476	2021-05-28 00:00:00	2021-05-30 19:50:33.12	\N	1
2	Second Auction - 2 - 2 - 2 - 2 - 2	Second auction to be done.	0	0	2	4218954098322	Golden slide trombone	j. Michael brand new slide trombone	UK	2021-05-28 00:00:00	2021-05-28 00:00:00	2021-05-30 19:50:46.655891	2021-05-28 00:00:00	2021-05-28 00:00:00	\N	2
\.


--
-- Data for Name: auctioncategory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auctioncategory (auctionid, categoryid) FROM stdin;
2	1
3	3
\.


--
-- Data for Name: auctionedithistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auctionedithistory (auctionedithistoryid, version, auctionname, description, edittimestamp, itemname, itemdescription, itemorigin, auctionid) FROM stdin;
32	1	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	2021-05-30 19:47:24.113618	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	1
33	1	Charity Auction - SpaceX	An auction made in order to raise funds for the poor people living in NY.	2021-05-30 19:47:24.113618	Tesla X2 - 2021	Latest Tesla car announced!	USA	3
34	2	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	2021-05-30 19:47:55.043153	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	1
35	3	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	2021-05-30 19:48:02.068575	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	1
36	2	Charity Auction - SpaceX	An auction made in order to raise funds for the poor people living in NY.	2021-05-30 19:48:12.540143	Tesla X2 - 2021	Latest Tesla car announced!	USA	3
37	4	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	2021-05-30 19:48:12.540143	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	1
38	3	Charity Auction - SpaceX	An auction made in order to raise funds for the poor people living in NY.	2021-05-30 19:48:23.261951	Tesla X2 - 2021	Latest Tesla car announced!	USA	3
39	5	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	2021-05-30 19:48:23.261951	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	1
40	4	Charity Auction - SpaceX	An auction made in order to raise funds for the poor people living in NY.	2021-05-30 19:49:23.473838	Tesla X2 - 2021	Latest Tesla car announced!	USA	3
41	6	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	2021-05-30 19:49:23.473838	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	1
42	1	Second Auction - 2 - 2 - 2 - 2 - 2	Second auction to be done.	2021-05-30 19:49:42.428275	Golden slide trombone	j. Michael brand new slide trombone	UK	2
43	5	Charity Auction - SpaceX	An auction made in order to raise funds for the poor people living in NY.	2021-05-30 19:49:42.428275	Tesla X2 - 2021	Latest Tesla car announced!	USA	3
44	7	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	2021-05-30 19:49:42.428275	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	1
45	8	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	2021-05-30 19:50:22.373326	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	1
46	6	Charity Auction - SpaceX	An auction made in order to raise funds for the poor people living in NY.	2021-05-30 19:50:22.373326	Tesla X2 - 2021	Latest Tesla car announced!	USA	3
47	2	Second Auction - 2 - 2 - 2 - 2 - 2	Second auction to be done.	2021-05-30 19:50:46.655891	Golden slide trombone	j. Michael brand new slide trombone	UK	2
48	9	First Auction - 1 - 1 - 1 - 1 - 1	First auction to be done.	2021-05-30 19:58:53.284476	MSIGT72VR Dominator Pro	Gaming PC from 2018 - PCMAG Readers choice	United States	1
49	7	Charity Auction - SpaceX	An auction made in order to raise funds for the poor people living in NY.	2021-05-30 19:58:53.284476	Tesla X2 - 2021	Latest Tesla car announced!	USA	3
50	3	Second Auction - 2 - 2 - 2 - 2 - 2	Second auction to be done.	2021-05-30 21:27:17.08149	Golden slide trombone	j. Michael brand new slide trombone	UK	2
51	4	Second Auction - 2 - 2 - 2 - 2 - 2	Second auction to be done.	2021-05-30 21:27:21.957755	Golden slide trombone	j. Michael brand new slide trombone	UK	2
52	5	Second Auction - 2 - 2 - 2 - 2 - 2	Second auction to be done.	2021-05-30 21:27:23.289609	Golden slide trombone	j. Michael brand new slide trombone	UK	2
53	6	Second Auction - 2 - 2 - 2 - 2 - 2	Second auction to be done.	2021-05-30 20:27:46.272388	Golden slide trombone	j. Michael brand new slide trombone	UK	2
\.


--
-- Data for Name: auctionnotification; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auctionnotification (auctionid, notificationid) FROM stdin;
\.


--
-- Data for Name: bid; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.bid (bidid, description, amount, createtimestamp, auctionid, userid, invalidationtimestamp) FROM stdin;
1	test bid	10	2021-05-30 16:35:35	1	3	2021-05-30 19:48:02.068575
\.


--
-- Data for Name: category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.category (categoryid, categoryname, description) FROM stdin;
1	Music	Item category for music instruments, devices, etc.
3	Furniture	Item category for furniture such as desks, chairs, wardrobes, etc.
\.


--
-- Data for Name: comment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.comment (commentid, text, createtimestamp, updatetimestamp, deletetimestamp, userid, auctionid) FROM stdin;
19	We are sorry to inform that this auction is no longer available	2021-05-30 19:58:53.284476	2021-05-30 19:58:53.284476	\N	1	1
20	We are sorry to inform that this auction is no longer available	2021-05-30 19:58:53.284476	2021-05-30 19:58:53.284476	\N	1	3
\.


--
-- Data for Name: commentnotification; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.commentnotification (auctionid, notificationid) FROM stdin;
1	83
1	84
1	85
1	86
1	87
1	88
\.


--
-- Data for Name: exception; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.exception (exceptionid, errorcode, errorstate, description, errortimestamp) FROM stdin;
\.


--
-- Data for Name: notification; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.notification (notificationid, notificationtitle, description, seentimestamp, createtimestamp, deletetimestamp, userid, updatetimestamp) FROM stdin;
83	New comment in auction First Auction - 1 - 1 - 1 - 1 - 1	User [josesilva] has commented in auction First Auction - 1 - 1 - 1 - 1 - 1	2021-05-30 16:55:40.981803	2021-05-30 15:37:41.629442	\N	3	2021-05-30 16:55:40.981803
84	New comment in auction First Auction - 1 - 1 - 1 - 1 - 1	User [josesilva] has commented in auction First Auction - 1 - 1 - 1 - 1 - 1	\N	2021-05-30 19:47:24.113618	\N	3	2021-05-30 19:47:24.113618
85	New comment in auction First Auction - 1 - 1 - 1 - 1 - 1	User [josesilva] has commented in auction First Auction - 1 - 1 - 1 - 1 - 1	\N	2021-05-30 19:48:12.540143	\N	3	2021-05-30 19:48:12.540143
86	New comment in auction First Auction - 1 - 1 - 1 - 1 - 1	User [josesilva] has commented in auction First Auction - 1 - 1 - 1 - 1 - 1	\N	2021-05-30 19:48:23.261951	\N	3	2021-05-30 19:48:23.261951
87	New comment in auction First Auction - 1 - 1 - 1 - 1 - 1	User [josesilva] has commented in auction First Auction - 1 - 1 - 1 - 1 - 1	\N	2021-05-30 19:49:23.473838	\N	3	2021-05-30 19:49:23.473838
88	New comment in auction First Auction - 1 - 1 - 1 - 1 - 1	User [joaoartur] has commented in auction First Auction - 1 - 1 - 1 - 1 - 1	\N	2021-05-30 19:58:53.284476	\N	3	2021-05-30 19:58:53.284476
\.


--
-- Data for Name: role; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.role (roleid, rolename, description) FROM stdin;
1	User	Common user.
2	Administrator	Super user.
\.


--
-- Data for Name: user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."user" (userid, username, firstname, lastname, email, phonenumber, address, birthdate, passwordhash, bantimestamp, createtimestamp, updatetimestamp, deletetimestamp, roleid) FROM stdin;
2	josesilva	José	Silva	josesilva@gmail.com	962246323	Tarouca	2000-09-06	0930bb84e844f84d9915eefc6c3fadf0	\N	2021-05-27 00:00:00	2021-05-27 00:00:00	\N	1
4	jonarturito	Joni	Arturito	jonarturito@hotmail.com	947362584	Tábua, Coimbra	2001-06-23	$2a$10$VXU9ICS5tY7i23cqACb1C.cd5tnOVhWBU4ipAiQBpBHiAq4qVDmoO	\N	2021-05-31 00:20:28.48	2021-05-31 00:20:28.48	\N	1
3	sanchosimoes	Sancho	Simões	smartlord7@gmail.com	967116687	Lousã	2001-06-23	1e27afecf9a9293efdfd68137a0e7aaf	\N	2021-05-27 00:00:00	2021-05-27 00:00:00	2021-05-31 00:28:21.399	1
1	joaoartur	João	Artur	joniarturito@hotmail.com	962746293	Tábua	2001-08-31	3502904dd4ca1b46522f17a4e31d8205	\N	2021-05-27 00:00:00	2021-05-27 00:00:00	\N	1
6	sancho	Sancho	Simões	sanchoreizinho@hotmail.com	947362234	Tábua, Coimbra	2001-06-23	0FAE8B6784770E5BE8247304ED65C71908CE4DE74F4E926200508886421733A9	\N	2021-05-31 02:09:26.849	2021-05-31 02:09:26.849	\N	1
\.


--
-- Name: Auction_auctionid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Auction_auctionid_seq"', 22, true);


--
-- Name: Category_categoryid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Category_categoryid_seq"', 1, false);


--
-- Name: User_userid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."User_userid_seq"', 6, true);


--
-- Name: auctionedithistory_auctionedithistoryid_seq1; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auctionedithistory_auctionedithistoryid_seq1', 53, true);


--
-- Name: bid_bidid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.bid_bidid_seq', 1, false);


--
-- Name: comment_commentid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.comment_commentid_seq', 20, true);


--
-- Name: exception_exceptionid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.exception_exceptionid_seq', 12, true);


--
-- Name: notification_notificationid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.notification_notificationid_seq', 88, true);


--
-- Name: role_roleid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.role_roleid_seq', 1, false);


--
-- Name: auctioncategory AuctionCategory_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auctioncategory
    ADD CONSTRAINT "AuctionCategory_pkey" PRIMARY KEY (auctionid, categoryid);


--
-- Name: auction Auction_itemean_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auction
    ADD CONSTRAINT "Auction_itemean_key" UNIQUE (itemean);


--
-- Name: auction Auction_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auction
    ADD CONSTRAINT "Auction_pkey" PRIMARY KEY (auctionid);


--
-- Name: category Category_categoryname_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.category
    ADD CONSTRAINT "Category_categoryname_key" UNIQUE (categoryname);


--
-- Name: category Category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.category
    ADD CONSTRAINT "Category_pkey" PRIMARY KEY (categoryid);


--
-- Name: user User_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT "User_email_key" UNIQUE (email);


--
-- Name: user User_passwordhash_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT "User_passwordhash_key" UNIQUE (passwordhash);


--
-- Name: user User_phonenumber_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT "User_phonenumber_key" UNIQUE (phonenumber);


--
-- Name: user User_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT "User_pkey" PRIMARY KEY (userid);


--
-- Name: user User_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT "User_username_key" UNIQUE (username);


--
-- Name: auctionedithistory auctionedithistory_pkey1; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auctionedithistory
    ADD CONSTRAINT auctionedithistory_pkey1 PRIMARY KEY (auctionedithistoryid);


--
-- Name: auctionnotification auctionnotification_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auctionnotification
    ADD CONSTRAINT auctionnotification_pkey PRIMARY KEY (notificationid);


--
-- Name: bid bid_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bid
    ADD CONSTRAINT bid_pkey PRIMARY KEY (bidid);


--
-- Name: comment comment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment
    ADD CONSTRAINT comment_pkey PRIMARY KEY (commentid);


--
-- Name: commentnotification commentsnotification_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.commentnotification
    ADD CONSTRAINT commentsnotification_pkey PRIMARY KEY (notificationid);


--
-- Name: exception exception_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.exception
    ADD CONSTRAINT exception_pkey PRIMARY KEY (exceptionid);


--
-- Name: notification notification_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification
    ADD CONSTRAINT notification_pkey PRIMARY KEY (notificationid);


--
-- Name: role role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_pkey PRIMARY KEY (roleid);


--
-- Name: role role_rolename_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_rolename_key UNIQUE (rolename);


--
-- Name: auctionitemdescriptionidx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auctionitemdescriptionidx ON public.auction USING btree (itemdescription);


--
-- Name: auctionitemeanidx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX auctionitemeanidx ON public.auction USING btree (itemean);


--
-- Name: auctionuserididx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auctionuserididx ON public.auction USING btree (hostuserid);


--
-- Name: biduserididx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX biduserididx ON public.notification USING btree (userid);


--
-- Name: commentauctionididx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX commentauctionididx ON public.comment USING btree (auctionid);


--
-- Name: notificationuserididx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX notificationuserididx ON public.notification USING btree (userid);


--
-- Name: usernameidx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX usernameidx ON public."user" USING btree (username);


--
-- Name: comment oninsertcomment; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER oninsertcomment AFTER INSERT ON public.comment FOR EACH ROW EXECUTE FUNCTION public.notifyusercomment();


--
-- Name: auction onupdateauction; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER onupdateauction AFTER UPDATE ON public.auction FOR EACH ROW EXECUTE FUNCTION public.updateauctionedithistory();


--
-- Name: auctioncategory auction_category_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auctioncategory
    ADD CONSTRAINT auction_category_fk1 FOREIGN KEY (auctionid) REFERENCES public.auction(auctionid);


--
-- Name: auctioncategory auction_category_fk2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auctioncategory
    ADD CONSTRAINT auction_category_fk2 FOREIGN KEY (categoryid) REFERENCES public.category(categoryid);


--
-- Name: auction auction_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auction
    ADD CONSTRAINT auction_fk1 FOREIGN KEY (hostuserid) REFERENCES public."user"(userid);


--
-- Name: auctionnotification auctionnotification_fk2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auctionnotification
    ADD CONSTRAINT auctionnotification_fk2 FOREIGN KEY (notificationid) REFERENCES public.notification(notificationid);


--
-- Name: bid bid_auction__fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bid
    ADD CONSTRAINT bid_auction__fk FOREIGN KEY (auctionid) REFERENCES public.auction(auctionid);


--
-- Name: bid bid_fk2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bid
    ADD CONSTRAINT bid_fk2 FOREIGN KEY (userid) REFERENCES public."user"(userid);


--
-- Name: comment comment_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment
    ADD CONSTRAINT comment_fk1 FOREIGN KEY (userid) REFERENCES public."user"(userid);


--
-- Name: commentnotification commentsnotification_fk2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.commentnotification
    ADD CONSTRAINT commentsnotification_fk2 FOREIGN KEY (notificationid) REFERENCES public.notification(notificationid);


--
-- Name: notification notification_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification
    ADD CONSTRAINT notification_fk1 FOREIGN KEY (userid) REFERENCES public."user"(userid);


--
-- Name: user user_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_fk1 FOREIGN KEY (roleid) REFERENCES public.role(roleid);


--
-- Name: DATABASE auctionation; Type: ACL; Schema: -; Owner: auctionation
--

REVOKE CONNECT,TEMPORARY ON DATABASE auctionation FROM PUBLIC;


--
-- PostgreSQL database dump complete
--

