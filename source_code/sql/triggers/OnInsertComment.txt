create function notifyusercomment() returns trigger
    language plpgsql
as
$$
DECLARE
    userName VARCHAR(128);
    auctionName VARCHAR(128);
    usersToNotify CURSOR FOR
        SELECT ua.userId
        FROM "UserAuction" ua
        WHERE ua.auctionId = NEW.auctionId AND ua.userId != NEW.userId;
BEGIN
    SELECT u.userName INTO userName
    FROM "User" u
    WHERE u.userId = NEW.userId;

    SELECT a.auctionName INTO auctionName
    FROM "Auction" a
             JOIN "Comment" ON NEW.auctionId = a.auctionId;

    FOR userToNotify IN usersToNotify
        LOOP
            INSERT INTO "Notification"
            (notificationTitle, description, createTimestamp, userId)
            VALUES (FORMAT('New comment in auction %s', auctionName),
                    FORMAT('User [%s] has commented in auction %s', userName, auctionName),
                    CURRENT_TIMESTAMP, userToNotify.userId);

            INSERT INTO "CommentNotification"
            VALUES (NEW.auctionId, CURRVAL(PG_GET_SERIAL_SEQUENCE('"Notification"', 'notificationid')));
        END LOOP;

    RETURN NEW;
END
$$;

alter function notifyusercomment() owner to postgres;

